# Coefficients calculated with https://github.com/simonbyrne/Remez.jl

@inline function approx_sin6(x)
    c₀ = -3.973469731362674855341438390082294213883278974991541937767473677431368915243573e-07
    c₁ = 1.570836217041332984730529807724804512813913999323155874457319653949294682692208
    c₂ = -0.0006544992986751856788898509251807919688107127224894862322972375041290744748724808
    c₃ = -0.6419234062521772847902747272510091735526104863235560212834020416189386246457165
    c₄ = -0.01195943899789065863626379569482705537726443072191037170685367113965183479849444
    c₅ = 0.09809306981440798273712054346124074588120379122552341460508929351777645851361327
    c₆ = -0.01439114761305156582725090902735022133758938412492841153146844370961612101295541
    vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(c₆, x, c₅), x, c₄), x, c₃), x, c₂), x, c₁), x, c₀)
end
@inline function approx_sin12(x)
    c0 = 1.187324390935486630823013788119036604329169743301368336020069835831582157575549e-15
    c1 = 1.570796326794492111285394239036358481722438566837992806014133797451761662004941
    c2 = 2.283530081064951722369068212183563497900076166507619157076923679584435318539096e-11
    c3 = -0.6459640980128603087068086315145223647654514336322677707302044602027288904226185
    c4 = 5.842421295473059050766490225016534053472369862435748299656718970815678520094871e-09
    c5 = 0.07969258611803622542083338370368147983054870806617639264858867869720344016624698
    c6 = 1.771184202186926124061220317794987117112096618307981344660885985731451555549507e-07
    c7 = -0.004682278901736620145851752272326062312580789463013829782973950097762148026896879
    c8 = 1.067014592854399796290450097041584047759188432123616061350597303506268226648049e-06
    c9 = 0.0001589454519464616462662637025185064817051879217672807729489056354762466547443757
    c10 = 1.425315419631929732463864249251890818703073525663758677390177542175253261577498e-06
    c11 = -4.48566416658809146567370632899965571020164065065991194087481446759099225218033e-06
    c12 = 3.289005970426370005716507983325595258619137968803762636025029127781979918868115e-07
    vfmadd(vfmadd(vfmadd(
        vfmadd(vfmadd(vfmadd(
            vfmadd(vfmadd(vfmadd(
                vfmadd(vfmadd(vfmadd(
                    c12, x, c11), x, c10), x, c9),
                x, c8), x, c7), x, c6),
            x, c5), x, c4), x, c3),
        x, c2), x, c1), x, c0)
end

@inline suboneopenconst(::Type{Float32}) = 1.9999999f0
@inline suboneopenconst(::Type{Float64}) = 1.9999999999999998
@inline function randsincos(u, ::Type{T}) where {T}
    r = mask(u, T)
    ooc = oneopenconst(T)
    sininput = vsub(r, ooc)
    s = vcopysign(approx_sin6(sininput), u)
    cosinput = vfnmadd(ooc, r, suboneopenconst(T))
    c = approx_sin6(cosinput)
    s, c
end


@inline function log12_7(x) # each extra coef cuts max error by about 6.5
    c0 = -3.245537891437475818527978529229908008038541532632077901681793316955253799627853
    c1 = 7.133969761783261596308839380142764345357825207927592180328308957632143143761325
    c2 = -7.494130176731051024066811749217581442825262641998555203442250312457063219780548
    c3 = 5.781439120377507449162563050101602606694402138734039600998751617511391254917479
    c4 = -2.985021102358628224549723815823770715482850258619037789336465429092098006063079
    c5 = 0.9780948488102108131759607721708499684604503249092972679349980253346585174787013
    c6 = -0.1839396423223307845519460189847030764334420832555490882187076088746804014578904
    c7 = 0.01512535916800840093163249616452966347663616377265149854210868241945849663079766
    vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(c7, x, c6), x, c5), x, c4), x, c3), x, c2), x, c1), x, c0)
end

@inline function log12_8(x)
    c0 = -3.425393083666334067790108512545303457895869147629969342312722110773152768787745
    c1 = 8.154804072298105118614242101352098813998371180480781803351886784650194633423925
    c2 = -10.00713525074289150060544073624417642119577303442852729267703418853804728270245
    c3 = 9.285983673564252215780879208501085478907382239737051965242871871829356007506347
    c4 = -6.013432610610964086674378270192946254591450512746857671796983783112863051993776
    c5 = 2.638773868907455181856795850097739510981561473919572777387590013143564751620262
    c6 = -0.7483574222662208128858646256056442436988142359531261888282163941214837199890769
    c7 = 0.1238457029355639890633309483614995366456841215797361229753033357177669422002932
    c8 = -0.009088908104546665130978765013488165959525861872199676157403513022150601871065725
    vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(c8, x, c7), x, c6), x, c5), x, c4), x, c3), x, c2), x, c1), x, c0)
end

@inline function log12_9(x)
    c0 = -3.585298173957385989978703196069874884252520373044145691918937267709490632531495
    c1 = 9.175512833125597682830796241005729674265545403887738180485766461445305540243307
    c2 = -12.88095295153181316823685136857741572991739006443899617826355360043323954685944
    c3 = 13.97023726212960122584115270603499243664357604160987633843608122694259681596965
    c4 = -10.88490936111543295028953131289531668167628753782395329546272132276910097503374
    c5 = 5.991068536274933212572646135712744769742009519680374067042945152617478421745127
    c6 = -2.274948730892808615344167059260983651564370908737772545840737790860551065669143
    c7 = 0.5675102681955644633507049003267428212647262631800341022730034095800899973034826
    c8 = -0.0837672704777144218198482121635843275577262111753625917138697703746721702699812
    c9 = 0.005547594786690080999583023292516375924224904367437611790985685156038375417640469
    vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(vfmadd(c9, x, c8), x, c7), x, c6), x, c5), x, c4), x, c3), x, c2), x, c1), x, c0)
end

@inline function log01(u::Vec{W,UInt64}, ::Type{Float64}) where {W}
    top0 = vand(u, 0x000fffffffffffff)
    lz = vadd(SIMDPirates.vleading_zeros( SIMDPirates.vleft_bitshift( u, 1 ) ), 1)
    f = vreinterpret(Vec{W,Float64}, vor(top0, 0x3ff0000000000000))
    l2h = log12_7(f)
    l2 = vsub(l2h, lz)
    vmul(0.6931471805599453, l2)
end


